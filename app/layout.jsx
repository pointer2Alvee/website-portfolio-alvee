import { Geist, Geist_Mono, JetBrains_Mono } from "next/font/google";
import { Roboto, Inter, Lora, Poppins, Montserrat, Manrope, Raleway, Work_Sans } from "next/font/google";
import "./globals.css";

// components
import Header from "@/components/Header";
import PageTransition from "@/components/ui/PageTransition";
import StairsTransition from "@/components/ui/StairsTransition";
import Footer from "@/components/Footer";
import SideProfile from "@/components/SideProfile";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const jetbrainsMono = JetBrains_Mono({
  variable: "--font-jetbrainsMono",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800"]
});


// Additional professional fonts with minimal spacing
const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "700", "900"], // Variety of weights for flexibility
  display: "swap",
});

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  display: "swap",
});

// similar
const poppins = Poppins({
  variable: "--font-poppins",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

const workSans = Work_Sans({
  variable: "--font-work-sans",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

const montserrat = Montserrat({
  variable: "--font-montserrat",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});


const manrope = Manrope({
  variable: "--font-manrope",
  subsets: ["latin"],
  weight: ["200", "300", "400", "500", "600", "700", "800"],
});

// imp below :
const lora = Lora({
  variable: "--font-lora",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"], // Great for headings or body text
  display: "swap",
});

const raleway = Raleway({
  variable: "--font-raleway",
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});







export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};



export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={`
      ${geistSans.variable} 
      ${geistMono.variable} 
      ${jetbrainsMono.variable} 
      ${roboto.variable} 
      ${lora.variable}
      ${inter.variable}
      ${poppins.variable} 
      ${montserrat.variable} 
      ${manrope.variable} 
      ${raleway.variable} 
      ${workSans.variable}
      antialiased`}>
        <Header />
        {/*<StairsTransition/>}
        <PageTransition>{children}</PageTransition>
        {*/}

        <section className=" h-full px-1 py-3 xl:py-1overflow-hidden">
          <div className="mx-auto h-full container overflow-y-auto">
            <div className="flex flex-col xl:flex-row items-start xl:items-top gap-5">
              {/* Left Side: SideProfile */}
                <aside className="w-full lg:w-[20%] bg-primary overflow-auto">
                  <SideProfile />
                </aside>
            {/* Right Side: Page Content */}
                <section className="w-full lg:w-[80%] bg-primary overflow-auto main-content">
                  {children}
                  <Footer />
                </section>
            </div>
          </div>
        </section>

       

      </body>
    </html>
  );
}
